import ctypes
import win32gui
import win32api
import win32con
import time
import math
from tkinter import messagebox, Tk
import random
import subprocess

def run_code():
    user32 = ctypes.windll.user32
    user32.SetProcessDPIAware()
    [sw, sh] = [user32.GetSystemMetrics(0), user32.GetSystemMetrics(1)]
    
    start_time = time.time()
    duration = 20  # Duration in seconds
    
    while time.time() - start_time < duration:
        hdc = win32gui.GetDC(0)
        color = (random.randint(0, 122), random.randint(0, 430), random.randint(0, 310))
        brush = win32gui.CreateSolidBrush(win32api.RGB(*color))
        win32gui.SelectObject(hdc, brush)
        win32gui.BitBlt(hdc, random.randint(-10, 10), random.randint(-10, 10), sw, sh, hdc, 0, 0, win32con.SRCCOPY)
        win32gui.BitBlt(hdc, random.randint(-10, 10), random.randint(-10, 10), sw, sh, hdc, 0, 0, win32con.PATINVERT)
    
    start_time = time.time()
    duration = 20  # Duration in seconds
    
    while time.time() - start_time < duration:
        hdc = win32gui.GetDC(0)
        win32gui.BitBlt(hdc, 0, 0, sw, sh, hdc, -3, -3, win32con.NOTSRCCOPY)
    
    start_time = time.time()
    duration = 20  # Duration in seconds
    
    while time.time() - start_time < duration:
        hdc = win32gui.GetDC(0)
        dx = dy = 1
        angle = 0
        size = 1
        speed = 5
        
        win32gui.BitBlt(hdc, 0, 0, sw, sh, hdc, dx, dy, win32con.SRCCOPY)
        dx = math.ceil(math.sin(angle) * size * 10)
        dy = math.ceil(math.cos(angle) * size * 10)
        angle += speed / 10
        if angle > math.pi:
            angle = math.pi * -1

def show_warning():
    root = Tk()
    root.withdraw()
    result = messagebox.askquestion("Warning", "This is the 1/3 Warning Implemented into the safe version of EVAPORATION. Proceed to the 2/3 Warning?", icon='warning')
    if result == 'yes':
        second_warning_result = messagebox.askquestion("2/3 Warning", "This is the 2/3 Warning Implemented into the safe version of EVAPORATION. Proceed to the 2/3 Warning?", icon='warning')
        if second_warning_result == 'yes':
            last_warning_result = messagebox.askquestion("3/3 Warning", "This is the 3/3 Warning Implemented into the safe version of EVAPORATION. Proceed to Run The Malware?", icon='warning')
            if last_warning_result == 'yes':
             run_code()
        else:
            # Add any alternative action or code here
            print("No clicked, action canceled.")
